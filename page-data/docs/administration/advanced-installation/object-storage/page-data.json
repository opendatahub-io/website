{"componentChunkName":"component---src-templates-create-pages-js","path":"/docs/administration/advanced-installation/object-storage","result":{"data":{"markdownRemark":{"html":"<h4>Ceph installation with the Rook operator</h4>\n<p>To install Ceph with the Rook operator, please follow these instructions (this does require cluster-admin permissions):</p>\n<ol>\n<li>\n<p>Download the files for Rook Ceph v0.9.3</p>\n<ul>\n<li>\n<p>If you want to modify the source Rook Ceph files directly, clone the Rook operator and checkout the v0.9.3 branch.</p>\n<pre><code class=\"language-bash\">git clone https://github.com/rook/rook.git\ncd rook\ngit checkout -b rook-0.9.3 v0.9.3\ncd cluster/examples/kubernetes/ceph/\n</code></pre>\n</li>\n<li>\n<p>Here are links to modified versions of the files that will install a basic Rook Ceph cluster with object storage enabled</p>\n<ul>\n<li><a href=\"{{ '/assets/files/pages/arch/rook/v0.9.3/scc.yaml' | prepend: site.baseurl }}\" download>scc.yaml</a></li>\n<li><a href=\"{{ '/assets/files/pages/arch/rook/v0.9.3/operator.yaml' | prepend: site.baseurl }}\" download>operator.yaml</a></li>\n<li><a href=\"{{ '/assets/files/pages/arch/rook/v0.9.3/cluster.yaml' | prepend: site.baseurl }}\" download>cluster.yaml</a></li>\n<li><a href=\"{{ '/assets/files/pages/arch/rook/v0.9.3/toolbox.yaml' | prepend: site.baseurl }}\" download>toolbox.yaml</a></li>\n<li><a href=\"{{ '/assets/files/pages/arch/rook/v0.9.3/object.yaml' | prepend: site.baseurl }}\" download>object.yaml</a></li>\n<li><a href=\"{{ '/assets/files/pages/arch/rook/v0.9.3/object-user.yaml' | prepend: site.baseurl }}\" download>object-user.yaml</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Edit <code>operator.yaml</code> and set the environment variables for <code>FLEXVOLUME_DIR_PATH</code> and <code>ROOK_HOSTPATH_REQUIRES_PRIVILEGED</code> to allow the Rook operator to use OpenShift hostpath storage</p>\n<pre><code class=\"language-yaml\"></code></pre>\n</li>\n<li>name: FLEXVOLUME<em>DIR</em>PATH\nvalue: \"/etc/kubernetes/kubelet-plugins/volume/exec\"</li>\n<li>\n<p>name: ROOK<em>HOSTPATH</em>REQUIRES_PRIVILEGED\nvalue: \"true\"</p>\n<pre><code></code></pre>\n</li>\n<li>\n<p>Configure the necessary security contexts, and deploy the rook operator, this will create a new namespace, <code>rook-ceph-system</code>, and deploy the pods in it:</p>\n<pre><code class=\"language-bash\">oc create -f scc.yaml\noc create -f operator.yaml\n</code></pre>\n</li>\n<li>\n<p>Check that all the pods are running in <code>rook-ceph-system</code></p>\n<pre><code class=\"language-bash\">oc get pods -n rook-ceph-system\nNAME READY STATUS RESTARTS AGE\nrook-ceph-agent-j4zms 1/1 Running 0 33m\nrook-ceph-agent-qghgc 1/1 Running 0 33m\nrook-ceph-agent-tjzv6 1/1 Running 0 33m\nrook-ceph-agent-w2rnk 1/1 Running 0 33m\nrook-ceph-operator-567f8cbb6-f5rsj 1/1 Running 0 33m\nrook-discover-gghsw 1/1 Running 0 33m\nrook-discover-jd226 1/1 Running 0 33m\nrook-discover-lgfrx 1/1 Running 0 33m\nrook-discover-lnjwp 1/1 Running 0 33m\n</code></pre>\n</li>\n<li>\n<p>Edit the <code>object.yaml</code> file and replace port <code>80</code> with <code>8080</code></p>\n<pre><code class=\"language-yaml\">gateway:\n# type of the gateway (s3)\ntype: s3\n# A reference to the secret in the rook namespace where the ssl certificate is stored\nsslCertificateRef:\n# The port that RGW pods will listen on (http)\nport: 8080\n</code></pre>\n</li>\n<li>\n<p>Once the operator is ready, you can create a Ceph cluster, and Ceph object service. The toolbox service is also handy to deploy for checking the health of the Ceph cluster.</p>\n<pre><code class=\"language-bash\">oc create -f cluster.yaml\noc create -f toolbox.yaml\noc create -f object.yaml\n</code></pre>\n</li>\n<li>\n<p>Check all the pods are running in <code>rook-ceph</code> namespace before proceeding</p>\n<pre><code class=\"language-bash\">oc get pods -n rook-ceph\nNAME READY STATUS RESTARTS AGE\nrook-ceph-mgr-a-5b6fcf7c6-cx676 1/1 Running 0 6m56s\nrook-ceph-mon-a-54d9bc6c97-kvfv6 1/1 Running 0 8m38s\nrook-ceph-mon-b-74699bf79f-2xlzz 1/1 Running 0 8m22s\nrook-ceph-mon-c-5c54856487-769fx 1/1 Running 0 7m47s\nrook-ceph-osd-0-7f4c45fbcd-7g8hr 1/1 Running 0 6m16s\nrook-ceph-osd-1-55855bf495-dlfpf 1/1 Running 0 6m15s\nrook-ceph-osd-2-776c77657c-sgf5n 1/1 Running 0 6m12s\nrook-ceph-osd-3-97548cc45-4xm4q 1/1 Running 0 5m58s\nrook-ceph-osd-prepare-ip-10-0-138-84-gc26q 0/2 Completed 0 6m29s\nrook-ceph-osd-prepare-ip-10-0-141-184-9bmdt 0/2 Completed 0 6m29s\nrook-ceph-osd-prepare-ip-10-0-149-16-nh4tm 0/2 Completed 0 6m29s\nrook-ceph-osd-prepare-ip-10-0-173-174-mzzhq 0/2 Completed 0 6m28s\nrook-ceph-rgw-my-store-d6946dcf-q8k69 1/1 Running 0 5m33s\nrook-ceph-tools-cb5655595-4g4b2 1/1 Running 0 8m46s\n</code></pre>\n</li>\n<li>\n<p>Next, you will need to create a set of S3 credentials, the resulting credentials will be stored in a secrets file under the <code>rook-ceph</code> namespace. There isnâ€™t currently a way to cross-share secrets between OpenShift namespaces, so you will need to copy the secret to whichever namespace is running the applications you want to interact with the object store. You can also copy the AccessKey and SecretKey from the second command.</p>\n<pre><code class=\"language-bash\">oc create -f object-user.yaml\noc get secrets -n rook-ceph rook-ceph-object-user-my-store-odh-user -o json\n</code></pre>\n</li>\n<li>From the OpenShift console, create a route to the rook service, <code>rook-ceph-rgw-my-store</code>, in the <code>rook-ceph</code> namespace to expose the endpoint. This endpoint url will be used to access the S3 interface from the example notebooks.</li>\n</ol>\n<p>{% include next-link.html label=\"GPU Enablement\" url=\"/docs/administration/advanced-installation/gpu.html\" %}</p>"}},"pageContext":{"permalink":"/docs/administration/advanced-installation/object-storage"}},"staticQueryHashes":["1804438722"]}